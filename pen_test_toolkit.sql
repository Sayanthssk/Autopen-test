/*
SQLyog Community v13.1.5  (64 bit)
MySQL - 10.4.28-MariaDB : Database - pen_test_toolkit
*********************************************************************
*/

/*!40101 SET NAMES utf8 */;

/*!40101 SET SQL_MODE=''*/;

/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
CREATE DATABASE /*!32312 IF NOT EXISTS*/`pen_test_toolkit` /*!40100 DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci */;

USE `pen_test_toolkit`;

/*Table structure for table `scan_results` */

DROP TABLE IF EXISTS `scan_results`;

CREATE TABLE `scan_results` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) DEFAULT NULL,
  `scan_type` varchar(50) DEFAULT NULL,
  `target` varchar(255) DEFAULT NULL,
  `results` text DEFAULT NULL,
  `scan_date` timestamp NOT NULL DEFAULT current_timestamp(),
  PRIMARY KEY (`id`),
  KEY `user_id` (`user_id`),
  CONSTRAINT `scan_results_ibfk_1` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=51 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

/*Data for the table `scan_results` */

insert  into `scan_results`(`id`,`user_id`,`scan_type`,`target`,`results`,`scan_date`) values 
(25,8,'SQL Injection','https://example.com','','2024-07-03 19:35:08'),
(26,8,'SQL Injection','https://example.com','Possible SQL Injection vulnerability found at parameter \"id\"; Database error messages suggest potential injection points; SQLMap simulation: Injection point detected at URL with parameter \"user\"','2024-07-04 21:22:43'),
(27,8,'SQL Injection','https://example.com','\n        [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. \n        It is the end user\'s responsibility to obey all applicable local, state and federal laws. \n        Developers assume no liability and are not responsible for any misuse or damage caused by this program\n\n        [*] starting @ 10:30:50 /2023-07-05/\n\n        [10:30:50] [INFO] testing connection to the target URL\n        [10:30:50] [INFO] heuristics detected web page charset \'utf-8\'\n        [10:30:50] [INFO] testing if the target URL content is stable\n        [10:30:50] [INFO] target URL content is stable\n        [10:30:50] [INFO] testing if GET parameter \'id\' is dynamic\n        [10:30:50] [INFO] confirming that GET parameter \'id\' is dynamic\n        [10:30:50] [INFO] GET parameter \'id\' is dynamic\n        [10:30:50] [INFO] heuristic (basic) test shows that GET parameter \'id\' might be injectable (possible DBMS: \'MySQL\')\n        [10:30:50] [INFO] heuristic (XSS) test shows that GET parameter \'id\' might be vulnerable to cross-site scripting (XSS) attacks\n        [10:30:50] [INFO] testing for SQL injection on GET parameter \'id\'\n        [10:30:50] [INFO] testing \'MySQL boolean-based blind - WHERE or HAVING clause\'\n        [10:30:50] [INFO] GET parameter \'id\' appears to be \'MySQL boolean-based blind - WHERE or HAVING clause\' injectable\n        [10:30:50] [INFO] testing \'MySQL error-based - Parameter replace\'\n        [10:30:50] [INFO] GET parameter \'id\' is vulnerable. Do you want to keep testing the others (if any)? [y/N]\n\n        available databases [1]:\n        [*] information_schema\n\n        available tables in \'information_schema\' database [5]:\n        [*] columns\n        [*] schemata\n        [*] tables\n        [*] views\n        [*] user_privileges\n\n        [10:30:50] [INFO] retrieved: \'testdb\'\n        [10:30:50] [INFO] retrieved: \'users\'\n        [10:30:50] [INFO] retrieved: \'id\'\n        [10:30:50] [INFO] retrieved: \'username\'\n        [10:30:50] [INFO] retrieved: \'password\'\n\n        [10:30:50] [INFO] table \'users\' dumped to: output/testdb/dump/users.csv\n        [10:30:50] [INFO] SQLMap finished.\n        ','2024-07-04 21:29:21'),
(40,8,'SQL Injection','https://example.com','python: can\'t open file \'D:\\sqlmap-master\\sqlmap.py\': [Errno 2] No such file or directory\n','2024-07-07 11:06:49'),
(41,8,'Network','192.168.1.0/24','Scapy Results: IP: 192.168.1.1, MAC: 60:bd:2c:79:de:70, IP: 192.168.1.3, MAC: 3c:6f:ea:02:3e:c9, IP: 192.168.1.77, MAC: 04:ec:d8:31:23:6f, IP: 192.168.1.22, MAC: de:db:97:82:64:82, IP: 192.168.1.47, MAC: 60:e9:aa:4b:1a:bb, IP: 192.168.1.59, MAC: e4:02:9b:a6:48:89, IP: 192.168.1.50, MAC: 00:45:e2:5f:af:a1, IP: 192.168.1.72, MAC: cc:5e:f8:67:17:1f, IP: 192.168.1.73, MAC: b8:1e:a4:90:92:db, IP: 192.168.1.10, MAC: 50:2b:73:71:e8:a8, IP: 192.168.1.25, MAC: f0:6c:5d:a3:c9:c8, IP: 192.168.1.35, MAC: 80:c5:f2:08:1d:03, IP: 192.168.1.38, MAC: 70:77:81:bd:ad:21\nNmap Results: IP: 192.168.1.1, MAC: 60:BD:2C:79:DE:70, IP: 192.168.1.10, MAC: 50:2B:73:71:E8:A8, IP: 192.168.1.115, MAC: B8:81:98:73:D2:91, IP: 192.168.1.19, MAC: DA:6B:48:14:8B:81, IP: 192.168.1.22, MAC: DE:DB:97:82:64:82, IP: 192.168.1.3, MAC: 3C:6F:EA:02:3E:C9, IP: 192.168.1.35, MAC: 80:C5:F2:08:1D:03, IP: 192.168.1.38, MAC: 70:77:81:BD:AD:21, IP: 192.168.1.47, MAC: 60:E9:AA:4B:1A:BB, IP: 192.168.1.50, MAC: 00:45:E2:5F:AF:A1, IP: 192.168.1.59, MAC: E4:02:9B:A6:48:89, IP: 192.168.1.72, MAC: CC:5E:F8:67:17:1F, IP: 192.168.1.73, MAC: B8:1E:A4:90:92:DB, IP: 192.168.1.75, MAC: E4:F8:9C:6A:EA:EB, IP: 192.168.1.77, MAC: N/A, IP: 192.168.1.78, MAC: 0A:96:0C:02:26:5D, IP: 192.168.1.98, MAC: F2:15:FD:F9:AB:42','2024-07-09 16:02:08'),
(42,8,'Web','https://example.com','Missing X-Frame-Options header; Missing Content-Security-Policy header','2024-07-09 16:02:32'),
(43,8,'SQL Injection','http://localhost/DVWA-master/vulnerabilities/sqli/?id=1&Submit=Submit','        ___\n       __H__\n ___ ___[\"]_____ ___ ___  {1.8.6.17#dev}\n|_ -| . [.]     | .\'| . |\n|___|_  [\"]_|_|_|__,|  _|\n      |_|V...       |_|   https://sqlmap.org\n\n[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user\'s responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program\n\n[*] starting @ 16:02:47 /2024-07-09/\n\n[1/1] URL:\nGET http://localhost/DVWA-master/vulnerabilities/sqli/?id=1&Submit=Submit\ndo you want to test this URL? [Y/n/q]\n> Y\n[16:02:47] [INFO] testing URL \'http://localhost/DVWA-master/vulnerabilities/sqli/?id=1&Submit=Submit\'\n[16:02:47] [INFO] using \'C:\\Users\\sayan\\AppData\\Local\\sqlmap\\output\\results-07092024_0402pm.csv\' as the CSV results file in multiple targets mode\n[16:02:47] [INFO] testing connection to the target URL\ngot a 302 redirect to \'http://localhost/DVWA-master/login.php\'. Do you want to follow? [Y/n] Y\nyou have not declared cookie(s), while server wants to set its own (\'PHPSESSID=lge80aqlr1f...u56p1cm0gh;security=impossible\'). Do you want to use those [Y/n] Y\n[16:02:47] [INFO] testing if the target URL content is stable\n[16:02:47] [WARNING] GET parameter \'id\' does not appear to be dynamic\n[16:02:48] [WARNING] heuristic (basic) test shows that GET parameter \'id\' might not be injectable\n[16:02:48] [INFO] testing for SQL injection on GET parameter \'id\'\n[16:02:48] [INFO] testing \'AND boolean-based blind - WHERE or HAVING clause\'\n[16:02:49] [INFO] testing \'Boolean-based blind - Parameter replace (original value)\'\n[16:02:49] [INFO] testing \'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)\'\n[16:02:49] [INFO] testing \'PostgreSQL AND error-based - WHERE or HAVING clause\'\n[16:02:50] [INFO] testing \'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)\'\n[16:02:50] [INFO] testing \'Oracle AND error-based - WHERE or HAVING clause (XMLType)\'\n[16:02:50] [INFO] testing \'Generic inline queries\'\n[16:02:50] [INFO] testing \'PostgreSQL > 8.1 stacked queries (comment)\'\n[16:02:51] [INFO] testing \'Microsoft SQL Server/Sybase stacked queries (comment)\'\n[16:02:51] [INFO] testing \'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)\'\n[16:02:51] [INFO] testing \'MySQL >= 5.0.12 AND time-based blind (query SLEEP)\'\n[16:02:51] [INFO] testing \'PostgreSQL > 8.1 AND time-based blind\'\n[16:02:52] [INFO] testing \'Microsoft SQL Server/Sybase time-based blind (IF)\'\n[16:02:52] [INFO] testing \'Oracle AND time-based blind\'\nit is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y\n[16:02:52] [INFO] testing \'Generic UNION query (NULL) - 1 to 10 columns\'\n[16:02:53] [WARNING] GET parameter \'id\' does not seem to be injectable\n[16:02:53] [WARNING] GET parameter \'Submit\' does not appear to be dynamic\n[16:02:53] [WARNING] heuristic (basic) test shows that GET parameter \'Submit\' might not be injectable\n[16:02:53] [INFO] testing for SQL injection on GET parameter \'Submit\'\n[16:02:53] [INFO] testing \'AND boolean-based blind - WHERE or HAVING clause\'\n[16:02:54] [INFO] testing \'Boolean-based blind - Parameter replace (original value)\'\n[16:02:55] [INFO] testing \'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)\'\n[16:02:55] [INFO] testing \'PostgreSQL AND error-based - WHERE or HAVING clause\'\n[16:02:55] [INFO] testing \'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)\'\n[16:02:56] [INFO] testing \'Oracle AND error-based - WHERE or HAVING clause (XMLType)\'\n[16:02:56] [INFO] testing \'Generic inline queries\'\n[16:02:56] [INFO] testing \'PostgreSQL > 8.1 stacked queries (comment)\'\n[16:02:56] [INFO] testing \'Microsoft SQL Server/Sybase stacked queries (comment)\'\n[16:02:56] [INFO] testing \'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)\'\n[16:02:57] [INFO] testing \'MySQL >= 5.0.12 AND time-based blind (query SLEEP)\'\n[16:02:57] [INFO] testing \'PostgreSQL > 8.1 AND time-based blind\'\n[16:02:57] [INFO] testing \'Microsoft SQL Server/Sybase time-based blind (IF)\'\n[16:02:58] [INFO] testing \'Oracle AND time-based blind\'\n[16:02:58] [INFO] testing \'Generic UNION query (NULL) - 1 to 10 columns\'\n[16:02:59] [WARNING] GET parameter \'Submit\' does not seem to be injectable\n[16:02:59] [ERROR] all tested parameters do not appear to be injectable. Try to increase values for \'--level\'/\'--risk\' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option \'--tamper\' (e.g. \'--tamper=space2comment\') and/or switch \'--random-agent\', skipping to the next target\n[16:02:59] [INFO] you can find results of scanning in multiple targets mode inside the CSV file \'C:\\Users\\sayan\\AppData\\Local\\sqlmap\\output\\results-07092024_0402pm.csv\'\n\n[*] ending @ 16:02:59 /2024-07-09/\n','2024-07-09 16:02:59'),
(44,10,'Network','192.168.1.0/24','Scapy Results: IP: 192.168.1.1, MAC: 60:bd:2c:79:de:70, IP: 192.168.1.3, MAC: 3c:6f:ea:02:3e:c9, IP: 192.168.1.77, MAC: 04:ec:d8:31:23:6f, IP: 192.168.1.22, MAC: de:db:97:82:64:82, IP: 192.168.1.59, MAC: e4:02:9b:a6:48:89, IP: 192.168.1.6, MAC: fe:1a:f1:ee:52:d6, IP: 192.168.1.10, MAC: 50:2b:73:71:e8:a8, IP: 192.168.1.25, MAC: f0:6c:5d:a3:c9:c8, IP: 192.168.1.35, MAC: 80:c5:f2:08:1d:03, IP: 192.168.1.37, MAC: 50:c2:e8:54:7b:fd, IP: 192.168.1.38, MAC: 70:77:81:bd:ad:21, IP: 192.168.1.58, MAC: cc:b0:da:66:3e:21, IP: 192.168.1.75, MAC: e4:f8:9c:6a:ea:eb, IP: 192.168.1.115, MAC: b8:81:98:73:d2:91\nNmap Results: IP: 192.168.1.1, MAC: 60:BD:2C:79:DE:70, IP: 192.168.1.10, MAC: 50:2B:73:71:E8:A8, IP: 192.168.1.115, MAC: B8:81:98:73:D2:91, IP: 192.168.1.22, MAC: DE:DB:97:82:64:82, IP: 192.168.1.25, MAC: F0:6C:5D:A3:C9:C8, IP: 192.168.1.3, MAC: 3C:6F:EA:02:3E:C9, IP: 192.168.1.35, MAC: 80:C5:F2:08:1D:03, IP: 192.168.1.37, MAC: 50:C2:E8:54:7B:FD, IP: 192.168.1.38, MAC: 70:77:81:BD:AD:21, IP: 192.168.1.58, MAC: CC:B0:DA:66:3E:21, IP: 192.168.1.59, MAC: E4:02:9B:A6:48:89, IP: 192.168.1.6, MAC: FE:1A:F1:EE:52:D6, IP: 192.168.1.75, MAC: E4:F8:9C:6A:EA:EB, IP: 192.168.1.77, MAC: N/A, IP: 192.168.1.78, MAC: 0A:96:0C:02:26:5D, IP: 192.168.1.98, MAC: F2:15:FD:F9:AB:42','2024-07-09 16:54:26'),
(45,10,'Web','https://example.com','Missing X-Frame-Options header; Missing Content-Security-Policy header','2024-07-09 16:54:33'),
(46,10,'SQL Injection','http://localhost/DVWA-master/vulnerabilities/sqli/?id=1&Submit=Submit','        ___\n       __H__\n ___ ___[\"]_____ ___ ___  {1.8.6.17#dev}\n|_ -| . [\']     | .\'| . |\n|___|_  [\"]_|_|_|__,|  _|\n      |_|V...       |_|   https://sqlmap.org\n\n[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user\'s responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program\n\n[*] starting @ 16:54:40 /2024-07-09/\n\n[1/1] URL:\nGET http://localhost/DVWA-master/vulnerabilities/sqli/?id=1&Submit=Submit\ndo you want to test this URL? [Y/n/q]\n> Y\n[16:54:40] [INFO] testing URL \'http://localhost/DVWA-master/vulnerabilities/sqli/?id=1&Submit=Submit\'\n[16:54:40] [INFO] using \'C:\\Users\\sayan\\AppData\\Local\\sqlmap\\output\\results-07092024_0454pm.csv\' as the CSV results file in multiple targets mode\n[16:54:40] [INFO] testing connection to the target URL\ngot a 302 redirect to \'http://localhost/DVWA-master/login.php\'. Do you want to follow? [Y/n] Y\nyou have not declared cookie(s), while server wants to set its own (\'PHPSESSID=v6rvo4ql574...oefs388att;security=impossible\'). Do you want to use those [Y/n] Y\n[16:54:41] [INFO] testing if the target URL content is stable\n[16:54:41] [WARNING] GET parameter \'id\' does not appear to be dynamic\n[16:54:41] [WARNING] heuristic (basic) test shows that GET parameter \'id\' might not be injectable\n[16:54:41] [INFO] testing for SQL injection on GET parameter \'id\'\n[16:54:41] [INFO] testing \'AND boolean-based blind - WHERE or HAVING clause\'\n[16:54:42] [INFO] testing \'Boolean-based blind - Parameter replace (original value)\'\n[16:54:42] [INFO] testing \'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)\'\n[16:54:43] [INFO] testing \'PostgreSQL AND error-based - WHERE or HAVING clause\'\n[16:54:43] [INFO] testing \'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)\'\n[16:54:44] [INFO] testing \'Oracle AND error-based - WHERE or HAVING clause (XMLType)\'\n[16:54:44] [INFO] testing \'Generic inline queries\'\n[16:54:44] [INFO] testing \'PostgreSQL > 8.1 stacked queries (comment)\'\n[16:54:44] [INFO] testing \'Microsoft SQL Server/Sybase stacked queries (comment)\'\n[16:54:45] [INFO] testing \'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)\'\n[16:54:45] [INFO] testing \'MySQL >= 5.0.12 AND time-based blind (query SLEEP)\'\n[16:54:45] [INFO] testing \'PostgreSQL > 8.1 AND time-based blind\'\n[16:54:45] [INFO] testing \'Microsoft SQL Server/Sybase time-based blind (IF)\'\n[16:54:46] [INFO] testing \'Oracle AND time-based blind\'\nit is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y\n[16:54:46] [INFO] testing \'Generic UNION query (NULL) - 1 to 10 columns\'\n[16:54:47] [WARNING] GET parameter \'id\' does not seem to be injectable\n[16:54:47] [WARNING] GET parameter \'Submit\' does not appear to be dynamic\n[16:54:47] [WARNING] heuristic (basic) test shows that GET parameter \'Submit\' might not be injectable\n[16:54:47] [INFO] testing for SQL injection on GET parameter \'Submit\'\n[16:54:47] [INFO] testing \'AND boolean-based blind - WHERE or HAVING clause\'\n[16:54:48] [INFO] testing \'Boolean-based blind - Parameter replace (original value)\'\n[16:54:48] [INFO] testing \'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)\'\n[16:54:49] [INFO] testing \'PostgreSQL AND error-based - WHERE or HAVING clause\'\n[16:54:49] [INFO] testing \'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)\'\n[16:54:49] [INFO] testing \'Oracle AND error-based - WHERE or HAVING clause (XMLType)\'\n[16:54:50] [INFO] testing \'Generic inline queries\'\n[16:54:50] [INFO] testing \'PostgreSQL > 8.1 stacked queries (comment)\'\n[16:54:50] [INFO] testing \'Microsoft SQL Server/Sybase stacked queries (comment)\'\n[16:54:50] [INFO] testing \'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)\'\n[16:54:50] [INFO] testing \'MySQL >= 5.0.12 AND time-based blind (query SLEEP)\'\n[16:54:51] [INFO] testing \'PostgreSQL > 8.1 AND time-based blind\'\n[16:54:51] [INFO] testing \'Microsoft SQL Server/Sybase time-based blind (IF)\'\n[16:54:52] [INFO] testing \'Oracle AND time-based blind\'\n[16:54:52] [INFO] testing \'Generic UNION query (NULL) - 1 to 10 columns\'\n[16:54:52] [WARNING] GET parameter \'Submit\' does not seem to be injectable\n[16:54:52] [ERROR] all tested parameters do not appear to be injectable. Try to increase values for \'--level\'/\'--risk\' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option \'--tamper\' (e.g. \'--tamper=space2comment\') and/or switch \'--random-agent\', skipping to the next target\n[16:54:52] [INFO] you can find results of scanning in multiple targets mode inside the CSV file \'C:\\Users\\sayan\\AppData\\Local\\sqlmap\\output\\results-07092024_0454pm.csv\'\n\n[*] ending @ 16:54:52 /2024-07-09/\n','2024-07-09 16:54:52'),
(47,10,'Network','192.168.1.0/24','Scapy Results: IP: 192.168.1.1, MAC: 60:bd:2c:79:de:70, IP: 192.168.1.3, MAC: 3c:6f:ea:02:3e:c9, IP: 192.168.1.77, MAC: 04:ec:d8:31:23:6f, IP: 192.168.1.19, MAC: da:6b:48:14:8b:81, IP: 192.168.1.59, MAC: e4:02:9b:a6:48:89, IP: 192.168.1.6, MAC: fe:1a:f1:ee:52:d6, IP: 192.168.1.10, MAC: 50:2b:73:71:e8:a8, IP: 192.168.1.25, MAC: f0:6c:5d:a3:c9:c8, IP: 192.168.1.35, MAC: 80:c5:f2:08:1d:03, IP: 192.168.1.38, MAC: 70:77:81:bd:ad:21, IP: 192.168.1.37, MAC: 50:c2:e8:54:7b:fd, IP: 192.168.1.58, MAC: cc:b0:da:66:3e:21, IP: 192.168.1.75, MAC: e4:f8:9c:6a:ea:eb, IP: 192.168.1.98, MAC: f2:15:fd:f9:ab:42, IP: 192.168.1.115, MAC: b8:81:98:73:d2:91\nNmap Results: IP: 192.168.1.1, MAC: 60:BD:2C:79:DE:70, IP: 192.168.1.10, MAC: 50:2B:73:71:E8:A8, IP: 192.168.1.115, MAC: B8:81:98:73:D2:91, IP: 192.168.1.19, MAC: DA:6B:48:14:8B:81, IP: 192.168.1.22, MAC: DE:DB:97:82:64:82, IP: 192.168.1.25, MAC: F0:6C:5D:A3:C9:C8, IP: 192.168.1.3, MAC: 3C:6F:EA:02:3E:C9, IP: 192.168.1.35, MAC: 80:C5:F2:08:1D:03, IP: 192.168.1.37, MAC: 50:C2:E8:54:7B:FD, IP: 192.168.1.38, MAC: 70:77:81:BD:AD:21, IP: 192.168.1.58, MAC: CC:B0:DA:66:3E:21, IP: 192.168.1.59, MAC: E4:02:9B:A6:48:89, IP: 192.168.1.6, MAC: FE:1A:F1:EE:52:D6, IP: 192.168.1.75, MAC: E4:F8:9C:6A:EA:EB, IP: 192.168.1.77, MAC: N/A, IP: 192.168.1.78, MAC: 0A:96:0C:02:26:5D, IP: 192.168.1.98, MAC: F2:15:FD:F9:AB:42','2024-07-09 17:00:20'),
(48,10,'Web','https://example.com','Missing X-Frame-Options header; Missing Content-Security-Policy header','2024-07-09 17:00:27'),
(49,10,'Web','http://localhost/DVWA-master/vulnerabilities/sqli/?id=1&Submit=Submit','Missing X-Frame-Options header; Missing Content-Security-Policy header','2024-07-09 17:00:32'),
(50,10,'SQL Injection','http://localhost/DVWA-master/vulnerabilities/sqli/?id=1&Submit=Submit','        ___\n       __H__\n ___ ___[(]_____ ___ ___  {1.8.6.17#dev}\n|_ -| . [\"]     | .\'| . |\n|___|_  [)]_|_|_|__,|  _|\n      |_|V...       |_|   https://sqlmap.org\n\n[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user\'s responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program\n\n[*] starting @ 17:00:41 /2024-07-09/\n\n[1/1] URL:\nGET http://localhost/DVWA-master/vulnerabilities/sqli/?id=1&Submit=Submit\ndo you want to test this URL? [Y/n/q]\n> Y\n[17:00:41] [INFO] testing URL \'http://localhost/DVWA-master/vulnerabilities/sqli/?id=1&Submit=Submit\'\n[17:00:41] [INFO] using \'C:\\Users\\sayan\\AppData\\Local\\sqlmap\\output\\results-07092024_0500pm.csv\' as the CSV results file in multiple targets mode\n[17:00:41] [INFO] testing connection to the target URL\ngot a 302 redirect to \'http://localhost/DVWA-master/login.php\'. Do you want to follow? [Y/n] Y\nyou have not declared cookie(s), while server wants to set its own (\'PHPSESSID=k5f4qmg1aoo...18cjns1dd6;security=impossible\'). Do you want to use those [Y/n] Y\n[17:00:41] [INFO] testing if the target URL content is stable\n[17:00:42] [WARNING] GET parameter \'id\' does not appear to be dynamic\n[17:00:42] [WARNING] heuristic (basic) test shows that GET parameter \'id\' might not be injectable\n[17:00:42] [INFO] testing for SQL injection on GET parameter \'id\'\n[17:00:42] [INFO] testing \'AND boolean-based blind - WHERE or HAVING clause\'\n[17:00:43] [INFO] testing \'Boolean-based blind - Parameter replace (original value)\'\n[17:00:43] [INFO] testing \'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)\'\n[17:00:44] [INFO] testing \'PostgreSQL AND error-based - WHERE or HAVING clause\'\n[17:00:44] [INFO] testing \'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)\'\n[17:00:44] [INFO] testing \'Oracle AND error-based - WHERE or HAVING clause (XMLType)\'\n[17:00:45] [INFO] testing \'Generic inline queries\'\n[17:00:45] [INFO] testing \'PostgreSQL > 8.1 stacked queries (comment)\'\n[17:00:45] [INFO] testing \'Microsoft SQL Server/Sybase stacked queries (comment)\'\n[17:00:45] [INFO] testing \'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)\'\n[17:00:46] [INFO] testing \'MySQL >= 5.0.12 AND time-based blind (query SLEEP)\'\n[17:00:46] [INFO] testing \'PostgreSQL > 8.1 AND time-based blind\'\n[17:00:46] [INFO] testing \'Microsoft SQL Server/Sybase time-based blind (IF)\'\n[17:00:47] [INFO] testing \'Oracle AND time-based blind\'\nit is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y\n[17:00:47] [INFO] testing \'Generic UNION query (NULL) - 1 to 10 columns\'\n[17:00:48] [WARNING] GET parameter \'id\' does not seem to be injectable\n[17:00:48] [WARNING] GET parameter \'Submit\' does not appear to be dynamic\n[17:00:48] [WARNING] heuristic (basic) test shows that GET parameter \'Submit\' might not be injectable\n[17:00:48] [INFO] testing for SQL injection on GET parameter \'Submit\'\n[17:00:48] [INFO] testing \'AND boolean-based blind - WHERE or HAVING clause\'\n[17:00:49] [INFO] testing \'Boolean-based blind - Parameter replace (original value)\'\n[17:00:49] [INFO] testing \'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)\'\n[17:00:50] [INFO] testing \'PostgreSQL AND error-based - WHERE or HAVING clause\'\n[17:00:50] [INFO] testing \'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)\'\n[17:00:50] [INFO] testing \'Oracle AND error-based - WHERE or HAVING clause (XMLType)\'\n[17:00:51] [INFO] testing \'Generic inline queries\'\n[17:00:51] [INFO] testing \'PostgreSQL > 8.1 stacked queries (comment)\'\n[17:00:51] [INFO] testing \'Microsoft SQL Server/Sybase stacked queries (comment)\'\n[17:00:51] [INFO] testing \'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)\'\n[17:00:52] [INFO] testing \'MySQL >= 5.0.12 AND time-based blind (query SLEEP)\'\n[17:00:52] [INFO] testing \'PostgreSQL > 8.1 AND time-based blind\'\n[17:00:52] [INFO] testing \'Microsoft SQL Server/Sybase time-based blind (IF)\'\n[17:00:53] [INFO] testing \'Oracle AND time-based blind\'\n[17:00:53] [INFO] testing \'Generic UNION query (NULL) - 1 to 10 columns\'\n[17:00:54] [WARNING] GET parameter \'Submit\' does not seem to be injectable\n[17:00:54] [ERROR] all tested parameters do not appear to be injectable. Try to increase values for \'--level\'/\'--risk\' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option \'--tamper\' (e.g. \'--tamper=space2comment\') and/or switch \'--random-agent\', skipping to the next target\n[17:00:54] [INFO] you can find results of scanning in multiple targets mode inside the CSV file \'C:\\Users\\sayan\\AppData\\Local\\sqlmap\\output\\results-07092024_0500pm.csv\'\n\n[*] ending @ 17:00:54 /2024-07-09/\n','2024-07-09 17:00:54');

/*Table structure for table `users` */

DROP TABLE IF EXISTS `users`;

CREATE TABLE `users` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `username` varchar(50) NOT NULL,
  `password_hash` varchar(255) NOT NULL,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  `contact_hash` varchar(255) DEFAULT NULL,
  `first_name` varchar(50) NOT NULL,
  `last_name` varchar(50) NOT NULL,
  `email_hash` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

/*Data for the table `users` */

insert  into `users`(`id`,`username`,`password_hash`,`created_at`,`contact_hash`,`first_name`,`last_name`,`email_hash`) values 
(8,'sayanth','pbkdf2:sha256:260000$XbrGucUXafCcld4o$3c170ada4eb20a26496b5f2d2115ceb574c04cea9c64b87a28df55d921aae08e','2024-07-02 20:28:50','pbkdf2:sha256:260000$9IvoFhs4Xvz8LXZo$7b41fd12dbdc506668a2a86f7c482ba64952a5b5195c2deeab5f4832e7d110e5','Sayanth S','kumar','pbkdf2:sha256:260000$Osrq3HbMGac5DMre$4c21d41c27bd5618f44dc695672d34d1ab546e29ddb5f8a82d82bbd0eef97e3e'),
(10,'admin','pbkdf2:sha256:260000$u2u3ptgIguPJ1Adi$99dfcb7911cfaf1418e0aa25db350db4507e87fcdcf113051f1447e47fc997ce','2024-07-09 16:18:30','pbkdf2:sha256:260000$9bXLYZmIzapd99JI$88e55dda2b989c8f15526cdc6a1f56b22617d601c704c04b9558279c7c828992','admin','admin','pbkdf2:sha256:260000$hIooRmvfyubYWCCX$63f0fb8958850accc72ebd3c6830f5b5ee398191935d3de14f4944883f7c0d29');

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;
